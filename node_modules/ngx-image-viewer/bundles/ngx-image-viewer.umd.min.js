!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("screenfull")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common","screenfull"],n):n(t["ngx-image-viewer"]={},t.ng.core,t.ng.common,t.screenfull)}(this,function(t,n,o,e){"use strict";var i=function(){return function(t,n){this.name=t,this.imageIndex=n}}(),r={btnClass:"default",zoomFactor:.1,containerBackgroundColor:"#ccc",wheelZoom:!1,allowFullscreen:!0,allowKeyboardNavigation:!0,btnShow:{zoomIn:!0,zoomOut:!0,rotateClockwise:!0,rotateCounterClockwise:!0,next:!0,prev:!0},btnIcons:{zoomIn:"fa fa-plus",zoomOut:"fa fa-minus",rotateClockwise:"fa fa-repeat",rotateCounterClockwise:"fa fa-undo",next:"fa fa-arrow-right",prev:"fa fa-arrow-left",fullscreen:"fa fa-arrows-alt"}},s=function(){function t(t){this.moduleConfig=t,this.index=0,this.indexChange=new n.EventEmitter,this.configChange=new n.EventEmitter,this.customEvent=new n.EventEmitter,this.style={transform:"",msTransform:"",oTransform:"",webkitTransform:""},this.fullscreen=!1,this.loading=!0,this.scale=1,this.rotation=0,this.translateX=0,this.translateY=0,this.hovered=!1}return t.prototype.ngOnInit=function(){var t=this.mergeConfig(r,this.moduleConfig);this.config=this.mergeConfig(t,this.config),this.triggerConfigBinding()},t.prototype.nextImage=function(t){this.canNavigate(t)&&this.index<this.src.length-1&&(this.loading=!0,this.index++,this.triggerIndexBinding(),this.reset())},t.prototype.prevImage=function(t){this.canNavigate(t)&&this.index>0&&(this.loading=!0,this.index--,this.triggerIndexBinding(),this.reset())},t.prototype.zoomIn=function(){this.scale*=1+this.config.zoomFactor,this.updateStyle()},t.prototype.zoomOut=function(){this.scale>this.config.zoomFactor&&(this.scale/=1+this.config.zoomFactor),this.updateStyle()},t.prototype.scrollZoom=function(t){if(this.config.wheelZoom)return t.deltaY>0?this.zoomOut():this.zoomIn(),!1},t.prototype.rotateClockwise=function(){this.rotation+=90,this.updateStyle()},t.prototype.rotateCounterClockwise=function(){this.rotation-=90,this.updateStyle()},t.prototype.onLoad=function(){this.loading=!1},t.prototype.onLoadStart=function(){this.loading=!0},t.prototype.onDragOver=function(t){this.translateX+=t.clientX-this.prevX,this.translateY+=t.clientY-this.prevY,this.prevX=t.clientX,this.prevY=t.clientY,this.updateStyle()},t.prototype.onDragStart=function(t){t.dataTransfer&&t.dataTransfer.setDragImage&&t.dataTransfer.setDragImage(t.target.nextElementSibling,0,0),this.prevX=t.clientX,this.prevY=t.clientY},t.prototype.toggleFullscreen=function(){this.fullscreen=!this.fullscreen,this.fullscreen||this.reset()},t.prototype.triggerIndexBinding=function(){this.indexChange.emit(this.index)},t.prototype.triggerConfigBinding=function(){this.configChange.next(this.config)},t.prototype.fireCustomEvent=function(t,n){this.customEvent.emit(new i(t,n))},t.prototype.reset=function(){this.scale=1,this.rotation=0,this.translateX=0,this.translateY=0,this.updateStyle()},t.prototype.onMouseOver=function(){this.hovered=!0},t.prototype.onMouseLeave=function(){this.hovered=!1},t.prototype.canNavigate=function(t){return null==t||this.config.allowKeyboardNavigation&&this.hovered},t.prototype.updateStyle=function(){this.style.transform="translate("+this.translateX+"px, "+this.translateY+"px) rotate("+this.rotation+"deg) scale("+this.scale+")",this.style.msTransform=this.style.transform,this.style.webkitTransform=this.style.transform,this.style.oTransform=this.style.transform},t.prototype.mergeConfig=function(t,n){var o=Object.assign({},t);return n&&(o=Object.assign({},t,n),n.btnIcons&&(o.btnIcons=Object.assign({},t.btnIcons,n.btnIcons))),o},t}();s.decorators=[{type:n.Component,args:[{selector:"ngx-image-viewer",template:'\n    <div [ngxToggleFullscreen]="fullscreen" class="img-container" [style.backgroundColor]="config.containerBackgroundColor"\n         (wheel)="scrollZoom($event)" (dragover)="onDragOver($event)">\n      <img [src]="src[index]" [ngStyle]="style" alt="Image not found..." (dragstart)="onDragStart($event)" (load)="onLoad()" (loadstart)="onLoadStart()"/>\n      \x3c!-- Div below will be used to hide the \'ghost\' image when dragging --\x3e\n      <div></div>\n      <div class="spinner-container" *ngIf="loading">\n        <div class="spinner"></div>\n      </div>\n\n      <button type="button" [class]="config.btnClass" *ngIf="config.btnShow.rotateCounterClockwise" (click)="rotateCounterClockwise()">\n        <span [class]="config.btnIcons.rotateCounterClockwise"></span>\n      </button>\n      <button type="button" [class]="config.btnClass" *ngIf="config.btnShow.rotateClockwise" (click)="rotateClockwise()">\n        <span [class]="config.btnIcons.rotateClockwise"></span>\n      </button>\n\n      <button type="button" [class]="config.btnClass" *ngIf="config.btnShow.zoomOut" (click)="zoomOut()">\n        <span [class]="config.btnIcons.zoomOut"></span>\n      </button>\n      <button type="button" [class]="config.btnClass" *ngIf="config.btnShow.zoomIn" (click)="zoomIn()">\n        <span [class]="config.btnIcons.zoomIn"></span>\n      </button>\n\n      <button type="button" [class]="config.btnClass" *ngFor="let cBtn of config.customBtns" (click)="fireCustomEvent(cBtn.name, index)">\n        <span [class]="cBtn.icon"></span>\n      </button>\n\n      <button type="button" id="ngx-fs-btn" [class]="config.btnClass" (click)="toggleFullscreen()" *ngIf="config.allowFullscreen">\n        <span [class]="config.btnIcons.fullscreen"></span>\n      </button>\n\n      <div class="nav-button-container" *ngIf="src.length > 1">\n        <button type="button" [class]="config.btnClass" (click)="prevImage()" [disabled]="index === 0">\n          <span [class]="config.btnIcons.prev"></span>\n        </button>\n        <button type="button" [class]="config.btnClass" (click)="nextImage()" [disabled]="index === src.length - 1">\n          <span [class]="config.btnIcons.next"></span>\n        </button>\n      </div>\n    </div>\n  ',styles:["\n    .img-container {\n      height: 100%;\n      width: 100%;\n      overflow: hidden;\n      position: relative; }\n\n    .img-container img {\n      z-index: 2;\n      margin: 0 auto;\n      display: block;\n      max-width: 100%;\n      max-height: 100%; }\n\n    .img-container button {\n      z-index: 99;\n      position: absolute;\n      right: 15px; }\n      .img-container button:not(:disabled) {\n        cursor: pointer; }\n\n    .img-container > button:nth-of-type(1):not(#ngx-fs-btn) {\n      bottom: 15px; }\n\n    .img-container > button:nth-of-type(2):not(#ngx-fs-btn) {\n      bottom: 65px; }\n\n    .img-container > button:nth-of-type(3):not(#ngx-fs-btn) {\n      bottom: 115px; }\n\n    .img-container > button:nth-of-type(4):not(#ngx-fs-btn) {\n      bottom: 165px; }\n\n    .img-container > button:nth-of-type(5):not(#ngx-fs-btn) {\n      bottom: 215px; }\n\n    .img-container > button:nth-of-type(6):not(#ngx-fs-btn) {\n      bottom: 265px; }\n\n    .img-container > button:nth-of-type(7):not(#ngx-fs-btn) {\n      bottom: 315px; }\n\n    #ngx-fs-btn {\n      top: 15px; }\n\n    button.default {\n      height: 40px;\n      width: 40px;\n      border: 1px solid #555;\n      border-radius: 50%;\n      background-color: white;\n      opacity: 0.7;\n      -webkit-transition: opacity 200ms;\n      transition: opacity 200ms; }\n\n    button.default:hover {\n      opacity: 1; }\n\n    button.default:disabled {\n      opacity: 0.25; }\n\n    .nav-button-container > button {\n      position: relative;\n      right: 0;\n      margin: 0 10px; }\n\n    .nav-button-container {\n      text-align: center;\n      position: absolute;\n      z-index: 98;\n      bottom: 10px;\n      left: 0;\n      right: 0; }\n\n    .spinner-container {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 60px;\n      height: 60px;\n      margin: auto;\n      padding: 10px;\n      background-color: rgba(0, 0, 0, 0.4);\n      border-radius: 25%; }\n\n    .spinner {\n      border-width: 7px;\n      border-style: solid;\n      border-color: #ccc;\n      border-bottom-color: #222;\n      border-radius: 50%;\n      height: 100%;\n      width: 100%;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      -webkit-animation: rotation 2s linear infinite;\n      /* Safari 4+ */\n      /* Fx 5+ */\n      /* Opera 12+ */\n      animation: rotation 2s linear infinite;\n      /* IE 10+, Fx 29+ */ }\n\n    @keyframes rotation {\n      from {\n        -webkit-transform: rotate(0deg); }\n      to {\n        -webkit-transform: rotate(359deg); } }\n\n    @-webkit-keyframes rotation {\n      from {\n        -webkit-transform: rotate(0deg); }\n      to {\n        -webkit-transform: rotate(359deg); } }\n  "]}]}],s.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Optional},{type:n.Inject,args:["config"]}]}]},s.propDecorators={src:[{type:n.Input}],index:[{type:n.Input}],config:[{type:n.Input}],indexChange:[{type:n.Output}],configChange:[{type:n.Output}],customEvent:[{type:n.Output}],nextImage:[{type:n.HostListener,args:["window:keyup.ArrowRight",["$event"]]}],prevImage:[{type:n.HostListener,args:["window:keyup.ArrowLeft",["$event"]]}],onMouseOver:[{type:n.HostListener,args:["mouseover"]}],onMouseLeave:[{type:n.HostListener,args:["mouseleave"]}]};var a=function(){function t(t){this.el=t}return t.prototype.ngOnChanges=function(){this.isFullscreen&&e.enabled?e.request(this.el.nativeElement):e.enabled&&e.exit()},t}();a.decorators=[{type:n.Directive,args:[{selector:"[ngxToggleFullscreen]"}]}],a.ctorParameters=function(){return[{type:n.ElementRef}]},a.propDecorators={isFullscreen:[{type:n.Input,args:["ngxToggleFullscreen"]}]};var c=function(){function t(){}return t.forRoot=function(n){return{ngModule:t,providers:[{provide:"config",useValue:n}]}},t}();c.decorators=[{type:n.NgModule,args:[{imports:[o.CommonModule],declarations:[s,a],exports:[s,a]}]}],c.ctorParameters=function(){return[]},t.ImageViewerComponent=s,t.CustomEvent=i,t.ImageViewerModule=c,t.ɵa=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-image-viewer.umd.min.js.map
